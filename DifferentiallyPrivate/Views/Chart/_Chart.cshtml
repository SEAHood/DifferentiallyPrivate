@model DifferentiallyPrivate.Models.MultiChart

@Html.Raw(Html.ValidationMessageFor(x => x).ToString())

@for (int i = 0; i < Model.allCharts.Count - 1; i++) //SIMPLE CHARTS
{
        <br /><br/>
        string chartHeader = "Chart " + Model.allCharts[i].id.ToString() +
                              " -- Data {" + Model.allCharts[i].data_input + "} -- " +
                              Model.allCharts[i].noiseType_input +
                              " (ε = " + Model.allCharts[i].epsilon_input;
                          
        if (Model.allCharts[i].noiseType_input == "gaussian")
        {
            chartHeader += ", δ = " + Model.allCharts[i].delta_input + ")";
        }
        else
        {
            chartHeader += ")";
        }

        chartHeader += " Actual " + Model.allCharts[i].queryType_input + ": " + Model.allCharts[i].actualResult +
                       ", Time Elapsed: " + Model.allCharts[i].stopwatch.ElapsedMilliseconds.ToString() + "ms";
    
        <h4>@chartHeader</h4>
        @(Model.allCharts[i].highchart)
}


@for (int i = 0; i < Model.allHomeCharts.Count - 1; i++) //HOME CHARTS
{
        <br /><br/>
        string chartHeader = "Chart " + Model.allHomeCharts[i].id.ToString() +
                             " using " + Model.allHomeCharts[i].noiseType_input + " noise. " +
                             "(ε = " + Model.allHomeCharts[i].epsilon_input;

        if (Model.allHomeCharts[i].noiseType_input == "gaussian")
        {
            chartHeader += ", δ = " + Model.allHomeCharts[i].delta_input + ")";
        }
        else
        {
            chartHeader += ")";
        }

        chartHeader += " Category = " + Model.allHomeCharts[i].data_cat_input +
                       ", Timespan = " + Model.allHomeCharts[i].timespan_input +
                       ", Actual " + Model.allHomeCharts[i].queryType_input + ": " + Math.Round(Model.allHomeCharts[i].actualResult, 3) +
                       ", Time Elapsed: " + Model.allHomeCharts[i].stopwatch.ElapsedMilliseconds.ToString() + "ms";
    
        <h4>@chartHeader</h4>
        @(Model.allHomeCharts[i].highchart)
}