@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model DifferentiallyPrivate.Models.MultiChart

<div id="viewContent">
    <h3>Simple Charting</h3>


    <!--Ajax.ActionLink("This is a test", "ChartingSimple", new AjaxOptions {  HttpMethod = "POST",
                                                                    InsertionMode = InsertionMode.Replace,
                                                                    UpdateTargetId = "MainChart" })-->

    <script>
        $(document).ready(function () {
            HideLoading();
            HideChartInput();
        });

        function ShowChartInput() {
            $("#loadingScreen").show();
            $("#chartInput").show();
        }

        function HideChartInput() {
            $("#loadingScreen").hide();
            $("#chartInput").hide();
        }

        function ShowLoading() {
            $('#loadingScreen').css("height", $(document).height());
            $("#loadingScreen").show();
            $("#loadingPanel").show();
        };

        function HideLoading() {
            $("#loadingScreen").hide();
            $("#loadingPanel").hide();
        };
    </script>

    <div id="chartsAdded">
        @if (Model.allCharts.Count > 1) //If number of charts is 1, only the new unedited chart exists
        {
            for (int i = 0; i <= Model.allCharts.Count - 2; i++) //Trim off new unedited chart model - default values (not added by user)
            {
                <p>Query(@(Model.allCharts[i].queryType_input));
                    @(Model.allCharts[i].iterations_input) iterations; 
                    @(Model.allCharts[i].binCount_input) bins;
                    ε = @(Model.allCharts[i].epsilon_input);</p>
            }
        }
        else
        {
            <p>No queries added.</p>
        }
    </div>
    
    <input type="button" value="Add Query" onclick="ShowChartInput()" class="mainButton" />

    @using (Ajax.BeginForm("ChartingSimple", "Chart", new AjaxOptions
    {
    UpdateTargetId = "MainChart",
    OnBegin = "return ShowLoading()",
    OnSuccess = "return HideLoading()"
    }))
    {
        for (int i = 0; i < Model.allCharts.Count - 1; i++)
        {
            @Html.HiddenFor(c => Model.allCharts[i].binCount_input)
            @Html.HiddenFor(c => Model.allCharts[i].data_input)
            @Html.HiddenFor(c => Model.allCharts[i].epsilon_input)
            @Html.HiddenFor(c => Model.allCharts[i].iterations_input)
            @Html.HiddenFor(c => Model.allCharts[i].queryType_input)
            @Html.HiddenFor(c => Model.allCharts[i].id)
        }
        <input id="submit" type="submit" value="Generate Query Charts" class="mainButton" />
    }
    

    <div id="loadingScreen">
    </div>
    <div id="loadingPanel">
        Loading..<br />
        <img src="~/Content/img/ajax-loader.gif" />
    </div>

    <!--using (Ajax.BeginForm("ChartingSimple", "Chart", new AjaxOptions{ UpdateTargetId = "MainChart",
                                                                           OnBegin = "return ShowLoading()",
                                                                           OnSuccess = "return HideLoading()" }))
    -->
    <div id="chartInput">
        @using (Html.BeginForm("ChartingSimple", "Chart", FormMethod.Post))
        {
            //if (Model.allCharts.Count > 1)
            //{
                for (int i = 0; i < Model.allCharts.Count; i++)
                {
                    if (Model.allCharts[i].id != Model.allCharts.Count - 1)
                    {
                        @Html.HiddenFor(c => Model.allCharts[i].binCount_input)
                        @Html.HiddenFor(c => Model.allCharts[i].data_input)
                        @Html.HiddenFor(c => Model.allCharts[i].epsilon_input)
                        @Html.HiddenFor(c => Model.allCharts[i].iterations_input)
                        @Html.HiddenFor(c => Model.allCharts[i].queryType_input)
                    }
                    @Html.HiddenFor(c => Model.allCharts[i].id)
                }
            //}
            <h3>New Chart</h3>
            <table>
                <tr>
                    <td>
                        @Html.LabelFor(c => Model.allCharts[Model.allCharts.Count - 1].iterations_input)
                    </td>
                    <td>
                        @Html.TextBoxFor(c => Model.allCharts[Model.allCharts.Count - 1].iterations_input)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(c => Model.allCharts[Model.allCharts.Count - 1].epsilon_input)
                    </td>
                    <td>
                        @Html.TextBoxFor(c => Model.allCharts[Model.allCharts.Count - 1].epsilon_input)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(c => Model.allCharts[Model.allCharts.Count - 1].binCount_input)
                    </td>
                    <td>
                        @Html.TextBoxFor(c => Model.allCharts[Model.allCharts.Count - 1].binCount_input)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(c => Model.allCharts[Model.allCharts.Count - 1].data_input)
                    </td>
                    <td>
                        @Html.TextBoxFor(c => Model.allCharts[Model.allCharts.Count - 1].data_input)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(c => Model.allCharts[Model.allCharts.Count - 1].queryType_input)
                    </td>
                    <td>
                        @Html.RadioButtonFor(c => Model.allCharts[Model.allCharts.Count - 1].queryType_input, "avg")
                        <label class="formLabel">Average</label>
                    </td>
                </tr>
                <tr>
                    <td>
                    </td>
                    <td>
                        @Html.RadioButtonFor(c => Model.allCharts[Model.allCharts.Count - 1].queryType_input, "med")
                        <label class="formLabel">Median</label>
                    </td>
                </tr>
                <tr>
                    <td>
                        <input type="submit" value="Add" onclick="HideChartInput()" class="mainButton" />
                        <input type="button" value="Cancel" onclick="HideChartInput()" class="mainButton" />
                    </td>
                </tr>
            </table>
        }
    </div>

    <div id="MainChart">
    </div>  
</div>